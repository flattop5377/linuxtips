---
layout: post
title:  "How to load a SSH private key when I login"
---

## Goals

  * Use a password on the SSH key to help protect it if it's stolen.
  * Use ssh-agent so that you only have to enter the password for your key once.

## Protect the private SSH key with a password

Never allow your private key to be stolen.  But if it is, then it helps
to have a password on it.  SSH keys are being used for authentication
in many different places, so a password helps.

During [ssh-keygen](https://man.openbsd.org/ssh-keygen.1) add a password.  I recommend using a password
manager like [KeePassXC](https://keepassxc.org/).  I've tried some online password managers and
don't like them.  One was found to not store everything securely.  One
started to demand using multi-factor authentication, and I don't want
to be required to have my cell phone with me.

```
ssh-keygen -t ed25519 
Generating public/private ed25519 key pair.
Enter file in which to save the key (/home/flattop5377/.ssh/id_ed25519): /home/flattop5377/example_id_ed25519
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/flattop5377/example_id_ed25519
Your public key has been saved in /home/flattop5377/example_id_ed25519.pub
The key fingerprint is:
SHA256:awYLu0Cl/SsbWXY8DX6CO6M1VzW6l1f/HUiZ00/Es1I flattop5377@dev
The key's randomart image is:
+--[ED25519 256]--+
|                 |
|               . |
|    .   .   o  Eo|
|   +   + o o .=.o|
|  o o = S =  * oo|
| .   B = * ...+oo|
|  . + O = . o...o|
|   ..= O   . .  +|
|    +o.         o|
+----[SHA256]-----+
```

Do enter a passphrase, I recommend one generated by [KeePassXC](https://keepassxc.org/).

## Automatically setup ssh-agent with ansible

```
wget https://raw.githubusercontent.com/flattop5377/linuxtips/refs/heads/main/ansible/ssh-agent.yml
ansible-playbook ssh-agent.yml --connection=local
```

## Manually setup ssh-agent to load the key

I use ~/.profile to run ssh-agent with a line like:

```
if [ -x "$HOME/sbin/ssh-agent-setup.sh" ] ; then source $HOME/sbin/ssh-agent-setup.sh; fi'
```

The setup script:

```
{% include scripts/ssh-agent-setup.sh %}
```

## Next Steps

Now use that public key anywhere you need to authenticate: git repositories,
ssh logins, etc.
